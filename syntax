data_structure = { declaration }
declaration = id '::=' ( simple_type_declaration | sequence_declaration | choice_declaration | array_declaration )

sequence_declaration = 'SEQUENCE' [ parameters ] '{' attribute { attribute } '}'

choice_declaration = 'CHOICE' '[' parameter ']' '{' { choice_attribute } choice_attribute_default '}'
choice_attribute = type '(' expression ')'
choice_attribute_default = type '(' 'DEFAULT' ')'

array_declaration = 'ARRAY' '[' parameter ']' '{' attribute { attribute }'}'

simple_type_declaration = simple_type '_' number

parameters = '[' parameter { parameter } ']'
parameter = ( id | number )
attribute = id type

type = ( simple_type | declared_type )
simple_type = ( 'UINT' | 'BITSTRING' | 'BOOL' )
declared_type = id [ parameters ]

expression = and_expression { 'OR' and_expression }
and_expression= simple_expression { 'AND' simple_expression }
simple_expression = id relational_operator value
relational_operator = ( '==' | '!=' | '<' | '>' | '<=' | '>=' )

value = ( number | boolean )
number = ( digit )
digit = '0'..'9'
boolean = ( 'TRUE' | 'FALSE' )

id = letter { ( letter | digit ) }
letter = ( 'a'..'z' | 'A'..'Z' )

